geom_line(stat = 'summary',
fun.y = mean)
# The overall rank is calculated by summing the rank for each workout
overallrank_male <- cf[cf$category == 'Rx' & cf$division == 'Male', ] %>%
group_by(athlete_id) %>%
summarise(name = first(name),
point_total = sum(rank))
overallrank_male$overall_rank <- rank(overallrank_male$point_total)
overallrank_male$overall_rank <- as.integer(overallrank_male$overall_rank)
overallrank_female <- cf[cf$category == 'Rx' & cf$division == 'Female', ] %>%
group_by(athlete_id) %>%
summarise(name = first(name),
point_total = sum(rank))
overallrank_female$overall_rank <- rank(overallrank_female$point_total)
overallrank_female$overall_rank <- as.integer(overallrank_female$overall_rank)
# Join rank on main table
cf_rank <- cf %>%
left_join(overallrank_male[, c('athlete_id', 'overall_rank')],
by='athlete_id')
cf_rank <- cf_rank %>%
left_join(overallrank_female[, c('athlete_id', 'overall_rank')],
by='athlete_id')
cf_rank$overall_rank.x <- ifelse(!is.na(cf_rank$overall_rank.y),
cf_rank$overall_rank.y,
cf_rank$overall_rank.x)
# Keep just one column
cf_rank$overall_rank.y <- NULL
names(cf_rank)[names(cf_rank) == 'overall_rank.x'] <- 'overall_rank'
cf <- cf_rank
ggplot(subset(cf, category == 'Rx'),
aes(x = age, y = overall_rank)) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits = c(18, 55),
breaks = seq(10, 60, 5)) +
geom_jitter(aes(color = division), alpha = 1/200) +
geom_line(stat = 'summary',
fun.y = mean)
ggplot(subset(cf, category == 'Rx'),
aes(x = age, y = overall_rank)) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits = c(18, 55),
breaks = seq(10, 60, 5)) +
geom_jitter(aes(color = division), alpha = 1/200) +
geom_line(stat = 'summary',
fun.y = mean) +
facet_wrap(~division, scales = 'free')
ggplot(subset(cf, category == 'Rx'),
aes(x = age, y = overall_rank)) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits = c(18, 55),
breaks = seq(10, 60, 5)) +
geom_jitter(aes(color = division), alpha = 1/200) +
geom_line(stat = 'summary',
fun.y = mean) +
facet_wrap(~division, scales = 'free')
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 1400))
# Plot score by age for given stage
plot_score_by_age <- function(st, alp = 1/150) {
plot <- ggplot(subset(cf,
category == 'Rx' &
!is_outlier(score) &
stage == st),
aes(x = age, y = score)) +
scale_x_continuous(limits = c(18, 55),
breaks = seq(15, 60, 5)) +
geom_jitter(aes(color = division),
alpha = alp) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1)
return(plot)
}
p1 <- plot_score_by_age(1) + scale_y_continuous(limits = c(25, 230))
is_outlier <- function(var) {
var %in% boxplot.stats(var)$out
}
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 1400))
grid.arrange(p1, p1a, p2, p3, p4, p5, ncol = 2)
# Plot score by age for given stage
plot_score_by_age <- function(st, alp = 1/150) {
plot <- ggplot(subset(cf,
category == 'Rx' &
!is_outlier(score) &
stage == st),
aes(x = age, y = score)) +
scale_x_continuous(limits = c(18, 55),
breaks = seq(15, 60, 5)) +
geom_jitter(aes(color = division),
alpha = alp) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1)
return(plot)
}
p1 <- plot_score_by_age(1) + scale_y_continuous(limits = c(25, 230))
p1a <- plot_score_by_age(1.1, alp = 1/170) +
scale_y_continuous(limits = c(50, 350))
p2 <- plot_score_by_age(2) + scale_y_continuous(limits = c(0, 300))
p3 <- plot_score_by_age(3, alp = 1/80) + scale_y_continuous(limits = c(0, 500))
p4 <- plot_score_by_age(4) + scale_y_continuous(limits = c(0, 150))
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 1400))
grid.arrange(p1, p1a, p2, p3, p4, p5, ncol = 2)
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 700))
grid.arrange(p1, p1a, p2, p3, p4, p5, ncol = 2)
# Plot score by age for given stage
plot_score_by_age <- function(st, alp = 1/150) {
plot <- ggplot(subset(cf,
category == 'Rx' &
#!is_outlier(score) &
stage == st),
aes(x = age, y = score)) +
scale_x_continuous(limits = c(18, 55),
breaks = seq(15, 60, 5)) +
geom_jitter(aes(color = division),
alpha = alp) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1)
return(plot)
}
p1 <- plot_score_by_age(1) + scale_y_continuous(limits = c(25, 230))
p1a <- plot_score_by_age(1.1, alp = 1/170) +
scale_y_continuous(limits = c(50, 350))
p2 <- plot_score_by_age(2) + scale_y_continuous(limits = c(0, 300))
p3 <- plot_score_by_age(3, alp = 1/80) + scale_y_continuous(limits = c(0, 500))
p4 <- plot_score_by_age(4) + scale_y_continuous(limits = c(0, 150))
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 700))
grid.arrange(p1, p1a, p2, p3, p4, p5, ncol = 2)
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 1400))
grid.arrange(p1, p1a, p2, p3, p4, p5, ncol = 2)
p1 <- plot_score_by_age(1) +
scale_y_continuous(limits = c(25, 230)) +
ggtitle('15.1')
p1a <- plot_score_by_age(1.1, alp = 1/170) +
scale_y_continuous(limits = c(50, 350)) +
ggtitle('15.1a')
p2 <- plot_score_by_age(2) +
scale_y_continuous(limits = c(0, 300)) +
ggtitle('15.2')
p3 <- plot_score_by_age(3, alp = 1/80) +
scale_y_continuous(limits = c(0, 500)) +
ggtitle('15.3')
p4 <- plot_score_by_age(4) +
scale_y_continuous(limits = c(0, 150)) +
ggtitle('15.4')
p5 <- plot_score_by_age(5, alp = 1/100) +
scale_y_continuous(limits = c(350, 1400)) +
ggtitle('15.5')
set_labels <- function(plt) {
plt <- plt + labs(x = 'Age (Years)',
y = 'Score (Number of Reps or Seconds)',
color = 'Division')
return(plt)
}
p1 <- set_labels(p1)
p1a <- set_labels(p1a)
p2 <- set_labels(p2)
p3 <- set_labels(p3)
p4 <- set_labels(p4)
p5 <- set_labels(p5)
grid.arrange(p1, p1a, p2, p3, p4, p5,
ncol = 2,
top = 'Mean Scores by Age for Each Workout')
library(tidyverse)
library(gridExtra)
theme_set(theme_light())
# Load the Data
cf <- read.csv('crossfit2015.csv')
# order 'howlong' variable
levels(cf$howlong) <- ordered(c('Less than 6 months|',
'6-12 months|',
'1-2 years|',
'2-4 years|',
'4+ years|'))
length(table(cf$athlete_id))
str(cf)
# First, let's create a data frame with just one row per athlete, instead
# of one row per result, so we can plot their demographic data.
unique_athletes <- subset(cf, !duplicated(athlete_id))
division_bar <- qplot(x = division, data = unique_athletes)
category_bar <- qplot(x = category, data = unique_athletes)
age_hist <- qplot(x = age, data = unique_athletes)
height_hist <- qplot(x = height, data = unique_athletes)
weight_hist <- qplot(x = weight, data = unique_athletes)
snatch_hist <- qplot(x = snatch, data = unique_athletes)
deadlift_hist <- qplot(x = deadlift, data = unique_athletes)
pullups_hist <- qplot(x = pullups, data = unique_athletes)
grid.arrange(division_bar, category_bar, age_hist,
height_hist, weight_hist, snatch_hist,
deadlift_hist, pullups_hist, ncol = 3)
is_outlier <- function(var) {
var %in% boxplot.stats(var)$out
}
height_hist <- qplot(x = height,
data = subset(unique_athletes, !is_outlier(height)))
weight_hist <- qplot(x = weight,
data = subset(unique_athletes, !is_outlier(weight)))
snatch_hist <- qplot(x = snatch,
data = subset(unique_athletes, !is_outlier(snatch)))
deadlift_hist <- qplot(x = deadlift,
data = subset(unique_athletes, !is_outlier(deadlift)))
pullups_hist <- qplot(x = pullups,
data = subset(unique_athletes, !is_outlier(pullups)))
grid.arrange(division_bar, category_bar, age_hist,
height_hist, weight_hist, snatch_hist,
deadlift_hist, pullups_hist, ncol = 3)
ggplot(data = subset(unique_athletes, !is.na(gender)),
aes(x = age)) +
geom_histogram(binwidth = 1, aes(fill = gender)) +
scale_fill_brewer() +
facet_wrap(~gender)
ggplot(data = subset(unique_athletes, !is.na(gender)),
aes(x = category, fill = division)) +
geom_bar(position = 'dodge') +
scale_fill_brewer(palette = 'Greens')
prop.table(table(unique_athletes$category))
ggplot(data = subset(unique_athletes, !is.na(gender)),
aes(x = gender, y = age)) +
geom_boxplot(aes(fill = category)) +
scale_fill_brewer()
scaled_athletes <- subset(unique_athletes, category == 'Scaled')
ggplot(data = subset(scaled_athletes, !is.na(gender)),
aes(x = age)) +
geom_histogram(binwidth = 1, fill = 'lightskyblue3') +
geom_vline(data = subset(scaled_athletes, gender == 'Female'),
aes(xintercept = mean(subset(scaled_athletes,
gender == 'Female')$age)),
linetype = 2) +
geom_vline(data = subset(scaled_athletes, gender == 'Male'),
aes(xintercept = mean(subset(scaled_athletes,
gender == 'Male')$age)),
linetype = 2) +
facet_wrap(~gender)
summary(subset(unique_athletes, gender == 'Female' & category == 'Rx')$age)
summary(subset(unique_athletes, gender == 'Male' & category == 'Rx')$age)
summary(subset(unique_athletes, gender == 'Female' & category == 'Scaled')$age)
summary(subset(unique_athletes, gender == 'Male' & category == 'Scaled')$age)
ggplot(subset(unique_athletes, !is.na(howlong)),
aes(x = howlong)) +
geom_bar(fill = 'lightblue')
ggplot(subset(unique_athletes, !is.na(howlong)),
aes(x = howlong)) +
geom_bar(aes(fill = category),
position = 'dodge')
ggplot(data = subset(unique_athletes, region != ""),
aes(x = region)) +
geom_bar(fill = 'lightblue') +
coord_flip()
ggplot(subset(cf, !is.na(cf$score) & category == 'Rx'),
aes(x = score)) +
geom_histogram(binwidth = 5, aes(fill = division)) +
facet_wrap(c('stage', 'division'), scales = 'free')
open.15.1.rx <- subset(cf, category == 'Rx' & stage == 1)
ggplot(open.15.1.rx,
aes(x = score)) +
geom_histogram(binwidth = 5, aes(fill = division)) +
facet_wrap(~division, scales = 'free') +
scale_x_continuous(breaks = seq(0, 300, 30))
ggplot(open.15.1.rx,
aes(x = deadlift, y = score)) +
geom_jitter(alpha = 1/100, aes(color = division)) +
geom_smooth(data = subset(open.15.1.rx, division == 'Male'),
color = 'blue', linetype = 2) +
geom_smooth(data = subset(open.15.1.rx, division == 'Female'),
color = 'red', linetype = 2) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits=c(quantile(unique_athletes$deadlift, .01,na.rm=T),
quantile(unique_athletes$deadlift, .99,na.rm=T)))+
scale_y_continuous(limits=c(quantile(open.15.1.rx$score, .01, na.rm=T),
quantile(open.15.1.rx$score, .99, na.rm=T)))
ggplot(data = open.15.1.rx,
aes(x = snatch, y = score)) +
geom_jitter(alpha = 1/100, aes(color = division)) +
geom_smooth(data = subset(open.15.1.rx, division == 'Male'),
color = 'blue', linetype = 2) +
geom_smooth(data = subset(open.15.1.rx, division == 'Female'),
color = 'red', linetype = 2) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits=c(quantile(unique_athletes$snatch, .01,na.rm = T),
quantile(unique_athletes$snatch, .99,na.rm = T)))+
scale_y_continuous(limits =c(quantile(open.15.1.rx$score, .05, na.rm = T),
quantile(open.15.1.rx$score, .99, na.rm = T)))
open.15.1a.rx <- subset(cf, category == 'Rx' & stage == 1.1)
ggplot(open.15.1a.rx,
aes(x = score)) +
geom_histogram(binwidth = 10, aes(fill = division)) +
facet_wrap(~division, scales = 'free')
ggplot(data = open.15.1a.rx,
aes(x = 5*round(weight/5), y = score)) +
geom_jitter(aes(color = division),
alpha = 1/170) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1) +
scale_x_continuous(limits=c(quantile(unique_athletes$weight, .01,na.rm = T),
quantile(unique_athletes$weight, .99,na.rm = T)))+
scale_y_continuous(limits = c(50, 350))
cor.test(open.15.1a.rx$weight, open.15.1a.rx$score)
open.15.2.rx <- subset(cf, category == 'Rx' & stage == 2)
ggplot(open.15.2.rx,
aes(x = score)) +
geom_histogram(binwidth = 5, aes(fill = division)) +
facet_wrap(~division, scales = 'free')
ggplot(subset(open.15.2.rx, division == 'Female'),
aes(x = score)) +
geom_histogram(binwidth = 1, fill = 'lightcoral') +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, 5))
female.15.2.scores <- table(subset(open.15.2.rx, division == 'Female')$score)
female.15.2.scores[names(female.15.2.scores) == 10]
prop.female.15.2.scores <- prop.table(female.15.2.scores)
prop.female.15.2.scores[names(prop.female.15.2.scores) == 10]
ggplot(data = open.15.2.rx,
aes(x = pullups, y = score)) +
geom_jitter(aes(color = division),
alpha = 1/30) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1) +
scale_x_continuous(limits=c(quantile(unique_athletes$pullups,.02,na.rm = T),
quantile(unique_athletes$pullups,.98,na.rm = T)))+
scale_y_continuous(limits = c(0, 300))
open.15.3.rx <- subset(cf, category == 'Rx' & stage == 3)
ggplot(open.15.3.rx,
aes(x = score)) +
geom_histogram(binwidth = 10, aes(fill = division)) +
facet_wrap(~division, scales = 'free')
ggplot(subset(open.15.3.rx, division == 'Female'),
aes(x = score)) +
geom_histogram(binwidth = 3, fill = 'lightcoral') +
scale_x_continuous(limits = c(0, 700), breaks = seq(0, 700, 50))
open.15.4.rx <- subset(cf, category == 'Rx' & stage == 4)
ggplot(data = open.15.4.rx,
aes(x = 5*round(weight/5), y = score)) +
geom_jitter(aes(color = division),
alpha = 1/100) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1) +
scale_x_continuous(limits=c(quantile(unique_athletes$weight, .01,na.rm = T),
quantile(unique_athletes$weight, .99,na.rm = T)))+
scale_y_continuous(limits = c(0, 150))
ggplot(open.15.4.rx,
aes(x = height, y = score)) +
geom_jitter(aes(color = division),
alpha = 1/100) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1) +
scale_x_continuous(limits = c(62, 77)) +
scale_y_continuous(limits = c(0, 150))
ggplot(subset(open.15.4.rx,
height > 62 & height <= 75 & division == 'Male'),
aes(x = 5*round(weight/5), y = score)) +
geom_jitter(alpha = 1/5, aes(color = height)) +
geom_smooth() +
scale_color_gradient(low = 'white', high = 'red') +
scale_x_continuous(limits = c(125, 275)) +
scale_y_continuous(limits = c(0, 150)) +
theme_dark()
ggplot(subset(open.15.4.rx,
height >= 60 & height <= 70 & division == 'Female'),
aes(x = 5*round(weight/5), y = score)) +
geom_jitter(alpha = 1/5, aes(color = height)) +
geom_smooth() +
scale_color_gradient(low = 'white', high = 'red') +
scale_x_continuous(limits = c(100, 180)) +
scale_y_continuous(limits = c(0, 170)) +
theme_dark()
open.15.5 <- subset(cf, stage == 5 & category == 'Rx')
ggplot(open.15.5,
aes(x = age, y = score)) +
geom_jitter(alpha = 1/60, aes(color = division)) +
geom_smooth() +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits = c(18, 55),
breaks = seq(10, 60, 5)) +
scale_y_continuous(limits = c(300, 1500)) +
facet_wrap(~division, scales = 'free')
ggplot(open.15.5,
aes(x = age, y = score)) +
scale_x_continuous(limits = c(18, 55),
breaks = seq(15, 60, 5)) +
geom_jitter(aes(color = division),
alpha = 1/100) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1) +
scale_y_continuous(limits = c(350, 1400))
# Plot score by age for given stage
plot_score_by_age <- function(st, alp = 1/150) {
plot <- ggplot(subset(cf,
category == 'Rx' &
stage == st),
aes(x = age, y = score)) +
scale_x_continuous(limits = c(18, 55),
breaks = seq(15, 60, 5)) +
geom_jitter(aes(color = division),
alpha = alp) +
geom_line(stat = 'summary',
fun.y = mean,
aes(color = division),
size = 1)
return(plot)
}
p1 <- plot_score_by_age(1) + scale_y_continuous(limits = c(25, 230))
p1a <- plot_score_by_age(1.1, alp = 1/170) +
scale_y_continuous(limits = c(50, 350))
p2 <- plot_score_by_age(2) + scale_y_continuous(limits = c(0, 300))
p3 <- plot_score_by_age(3, alp = 1/80) + scale_y_continuous(limits = c(0, 500))
p4 <- plot_score_by_age(4) + scale_y_continuous(limits = c(0, 150))
p5 <- plot_score_by_age(5) + scale_y_continuous(limits = c(350, 1400))
grid.arrange(p1, p1a, p2, p3, p4, p5, ncol = 2)
# The overall rank is calculated by summing the rank for each workout
overallrank_male <- cf[cf$category == 'Rx' & cf$division == 'Male', ] %>%
group_by(athlete_id) %>%
summarise(name = first(name),
point_total = sum(rank))
overallrank_male$overall_rank <- rank(overallrank_male$point_total)
overallrank_male$overall_rank <- as.integer(overallrank_male$overall_rank)
overallrank_female <- cf[cf$category == 'Rx' & cf$division == 'Female', ] %>%
group_by(athlete_id) %>%
summarise(name = first(name),
point_total = sum(rank))
overallrank_female$overall_rank <- rank(overallrank_female$point_total)
overallrank_female$overall_rank <- as.integer(overallrank_female$overall_rank)
# Join rank on main table
cf_rank <- cf %>%
left_join(overallrank_male[, c('athlete_id', 'overall_rank')],
by='athlete_id')
cf_rank <- cf_rank %>%
left_join(overallrank_female[, c('athlete_id', 'overall_rank')],
by='athlete_id')
cf_rank$overall_rank.x <- ifelse(!is.na(cf_rank$overall_rank.y),
cf_rank$overall_rank.y,
cf_rank$overall_rank.x)
# Keep just one column
cf_rank$overall_rank.y <- NULL
names(cf_rank)[names(cf_rank) == 'overall_rank.x'] <- 'overall_rank'
cf <- cf_rank
ggplot(subset(cf, category == 'Rx'),
aes(x = age, y = overall_rank)) +
scale_color_brewer(palette = 'Set1') +
scale_x_continuous(limits = c(18, 55),
breaks = seq(10, 60, 5)) +
geom_jitter(aes(color = division), alpha = 1/200) +
geom_line(stat = 'summary',
fun.y = mean) +
facet_wrap(~division, scales = 'free')
#15.2_Female_Scores_Zoom
ggplot(subset(open.15.2.rx, division == 'Female'),
aes(x = score)) +
geom_histogram(binwidth = 1, fill = 'lightcoral') +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, 5)) +
scale_y_continuous(breaks = seq(0, 10000, 1000)) +
labs(x = 'Score (Number of Repetitions)',
y = 'Number of Athletes',
title = 'Female 15.2 Scores - The Chest-to-Bar Obstacle')
#15.4_Female_Scores_by_Weight_and_Height
ggplot(subset(open.15.4.rx,
height >= 60 & height <= 70 & division == 'Female'),
aes(x = 5*round(weight/5), y = score)) +
geom_jitter(alpha = 1/5, aes(color = height)) +
geom_smooth() +
scale_color_gradient(low = 'white', high = 'red') +
scale_x_continuous(limits = c(100, 180), breaks = seq(100, 180, 10)) +
scale_y_continuous(limits = c(0, 170)) +
theme_dark() +
labs(x = 'Weight (pounds)',
y = 'Score (Number of Repetitions)',
color = 'Height (inches)',
title = 'Female 15.4 Scores - Weight and Height')
p1 <- plot_score_by_age(1) +
scale_y_continuous(limits = c(25, 230)) +
ggtitle('15.1')
p1a <- plot_score_by_age(1.1, alp = 1/170) +
scale_y_continuous(limits = c(50, 350)) +
ggtitle('15.1a')
p2 <- plot_score_by_age(2) +
scale_y_continuous(limits = c(0, 300)) +
ggtitle('15.2')
p3 <- plot_score_by_age(3, alp = 1/80) +
scale_y_continuous(limits = c(0, 500)) +
ggtitle('15.3')
p4 <- plot_score_by_age(4) +
scale_y_continuous(limits = c(0, 150)) +
ggtitle('15.4')
p5 <- plot_score_by_age(5, alp = 1/100) +
scale_y_continuous(limits = c(350, 1400)) +
ggtitle('15.5')
set_labels <- function(plt) {
plt <- plt + labs(x = 'Age (Years)',
y = 'Score (Number of Reps or Seconds)',
color = 'Division')
return(plt)
}
p1 <- set_labels(p1)
p1a <- set_labels(p1a)
p2 <- set_labels(p2)
p3 <- set_labels(p3)
p4 <- set_labels(p4)
p5 <- set_labels(p5)
grid.arrange(p1, p1a, p2, p3, p4, p5,
ncol = 2,
top = 'Mean Scores by Age for Each Workout')
